 Что такое контейнер? - коробка.

 Первым делом давайте уточним что контейнер делится на 3 части:
 Объявленная часть контейнера - Подобна классу в ООП или объявлению
функции.
 Вызывная часть контейнера - Подобна классу в ООП или объявлению
объекта или вызову функции.
 Скомпонованная часть контейнера - слияние двух частей  - конечный
объект.

 И так что же такое контейнер?

 Все мы изучали html, js, css... Контейнер это нечто подобно тегам. Это
изменяемый объект, коробка данных или кода и т.д.

 У контейнера есть некоторые виды полей. Количество одинаковых полей не
ограничено. Есть такие виды: аргументы, параметры, данные, свойства,
поле исполняемого кода, пространство имен и поле указателей.

 Также есть особый контейнер, как правило main или dream - потому что
адрес точки входа в программу указывает на него. Это делает его
пространство имен глобальным для внутренних контейнеров и прочие плюшки
(разрешение управлять списком возможностей, синтаксисом и т.д.).

 Контейнер может быть внутри любого поля, и иногда даже исполняться по
разному в зависимости от контекста(например: in).

 Поле свойств контейнера не является его внутренней частью, а скорее
оболочкой. Например свойство смены стиля хранения объекта может этот
объект перекомпоновать. Но внутренность объекта может редактировать и
саму оболочку. Некоторые редактирования свойств требуют резервацию
текущего расположения точки исполнения(например перекомпоновка объекта
в котором находишься) или других объектов, контейнеров.


Контейнер не всегда может быть редактируемым(особенно касаясь свойств),
например базовые типы считаются автоматически, как самым меленькой
частичкой в языке. Эта способность важна для построения новых типов
подобно базовым, которые не рекомендуется разбирать.

